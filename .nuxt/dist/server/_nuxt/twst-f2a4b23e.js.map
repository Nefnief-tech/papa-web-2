{"version":3,"file":"twst-f2a4b23e.js","sources":["../../../../pages/twst.vue"],"sourcesContent":["<template>\r\n  <h1 class=\"text-3xl font-bold text-center\">Mitarbeiter</h1>\r\n\r\n  <templatee />\r\n\r\n  <div>\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"card structure from above\"\r\n      class=\"input input-bordered input-accent w-full max-w-xs m-12\"\r\n      id=\"input\"\r\n    />\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"name of employee\"\r\n      class=\"input input-bordered input-accent w-full max-w-xs m-12\"\r\n      id=\"name\"\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      placeholder=\"order number\"\r\n      class=\"input input-bordered input-accent w-full max-w-xs m-12\"\r\n      id=\"num\"\r\n    />\r\n    <button class=\"btn btn-primary\" @click=\"createCard\">Create Card</button>\r\n  </div>\r\n\r\n  <!--Divider-->\r\n\r\n  <div class=\"divider m-12\"></div>\r\n\r\n  <!--list of employees-->\r\n  <h1 class=\"text-3xl font-bold text-center\">Mitarbeiter Liste:</h1>\r\n\r\n  <!--beginn of list -->\r\n\r\n  <div class=\"overflow-x-auto\">\r\n    <table class=\"table table-zebra\" ref=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>Name</th>\r\n          <th>ID</th>\r\n          <th>Order</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(item, index) in tableData\" :key=\"index\">\r\n          <th>{{ index + 1 }}</th>\r\n          <td>{{ item.name }}</td>\r\n          <td>{{ item.$id }}</td>\r\n          <td>{{ item.num }}</td>\r\n          s\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <dangerzone />\r\n  <div class=\"divider\"></div>\r\n  <imageupload />\r\n  <div class=\"divider\"></div>\r\n  <filetable />\r\n\r\n  <div class=\"toast\" v-if=\"showToast\">\r\n    <div class=\"alert alert-info\">\r\n      <span>New message arrived.</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// randome number generator\r\nimport { Account, Client, Storage, ID, Databases } from \"appwrite\";\r\n\r\nconst client = new Client();\r\n\r\nclient\r\n  .setEndpoint(\"https://appwrite.nief.tech/v1\")\r\n  .setProject(\"65254ba2c6d13ae30a67\");\r\nconst account = new Account(client);\r\nconst storage = new Storage(client);\r\nconst databases = new Databases(client);\r\n\r\n//authentication\r\n\r\nfunction checkSession() {\r\n  const promise = account.getSession(\"current\");\r\n\r\n  promise.then(\r\n    function (response) {\r\n      console.log(response); // Success\r\n    },\r\n    function (error) {\r\n      console.log(error); // Failure\r\n      window.location.href = \"/login\";\r\n    }\r\n  );\r\n}\r\n\r\n//create Card\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // your data properties here\r\n    };\r\n  },\r\n  methods: {\r\n    createCard() {\r\n      let card = document.getElementById(\"input\").value;\r\n      let name = document.getElementById(\"name\").value;\r\n      let num = document.getElementById(\"num\").value;\r\n\r\n      const promise = databases.createDocument(\r\n        \"6525a3104c1b6602d0ef\", //database ID\r\n        \"6525a31a6d23271d8dff\", //collection ID\r\n        ID.unique(),\r\n        { Card: card, name: name, num: num }\r\n      );\r\n\r\n      promise.then(\r\n        function (response) {\r\n          console.log(response);\r\n\r\n          let IC = response.$id;\r\n\r\n          //create card\r\n\r\n          let cardsHtml = \"\";\r\n          if (response.documents) {\r\n            response.documents.forEach((document) => {\r\n              cardsHtml += document.card;\r\n            });\r\n          }\r\n\r\n          const promise = databases.createDocument(\r\n            \"6525a3104c1b6602d0ef\", //database ID\r\n            \"6525a31a6d23271d8dff\", //collection ID\r\n            ID.unique(),\r\n            { employeeID: IC, card: response.card }\r\n          );\r\n\r\n          // continue your code here\r\n        },\r\n        function (error) {\r\n          console.log(error);\r\n        }\r\n      );\r\n    },\r\n    // other methods here\r\n  },\r\n  // other Vue options here\r\n};\r\n\r\n//table init and visalisation of employees\r\n</script>\r\n"],"names":["document","_ssrInterpolate"],"mappings":";;;;;AA0EA,MAAM,SAAS,IAAI;AAEnB,OACG,YAAY,+BAA+B,EAC3C,WAAW,sBAAsB;AACpB,IAAI,QAAQ,MAAM;AAClB,IAAI,QAAQ,MAAM;AAClC,MAAM,YAAY,IAAI,UAAU,MAAM;AAoBtC,MAAK,YAAU;AAAA,EACb,OAAO;AACL,WAAO;AAAA;AAAA;EAGR;AAAA,EACD,SAAS;AAAA,IACP,aAAa;AACX,UAAI,OAAO,SAAS,eAAe,OAAO,EAAE;AAC5C,UAAI,OAAO,SAAS,eAAe,MAAM,EAAE;AAC3C,UAAI,MAAM,SAAS,eAAe,KAAK,EAAE;AAEzC,YAAM,UAAU,UAAU;AAAA,QACxB;AAAA;AAAA,QACA;AAAA;AAAA,QACA,GAAG,OAAQ;AAAA,QACX,EAAE,MAAM,MAAM,MAAY,IAAS;AAAA;AAGrC,cAAQ;AAAA,QACN,SAAU,UAAU;AAClB,kBAAQ,IAAI,QAAQ;AAEpB,cAAI,KAAK,SAAS;AAIlB,cAAI,YAAY;AAChB,cAAI,SAAS,WAAW;AACtB,qBAAS,UAAU,QAAQ,CAACA,cAAa;AACvC,2BAAaA,UAAS;AAAA,YACxB,CAAC;AAAA,UACH;AAEgB,oBAAU;AAAA,YACxB;AAAA;AAAA,YACA;AAAA;AAAA,YACA,GAAG,OAAQ;AAAA,YACX,EAAE,YAAY,IAAI,MAAM,SAAS,KAAK;AAAA,UACvC;AAAA,QAGF;AAAA,QACD,SAAU,OAAO;AACf,kBAAQ,IAAI,KAAK;AAAA,QACnB;AAAA;IAEH;AAAA;AAAA,EAEF;AAAA;AAEH;;;;;;;;;gBAzGoC,KAAS,WAAA,CAAzB,MAAM,UAAK;oCACd,QAAK,CAAA,aACLC,eAAA,KAAK,IAAI,aACTA,eAAA,KAAK,GAAG,aACRA,eAAA,KAAK,GAAG;;;;;;;;MAYE,KAAS,WAAA;;;;;;;;;;;;;;"}