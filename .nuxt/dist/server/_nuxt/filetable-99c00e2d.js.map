{"version":3,"file":"filetable-99c00e2d.js","sources":["../../../../components/templatee.vue","../../../../components/dangerzone.vue","../../../../components/imageupload.vue","../../../../components/filetable.vue"],"sourcesContent":["<template>\r\n  <div class=\"text\">\r\n    <h2 class=\"text-xl font-bold mb-5 text-center mt-10\">\r\n      Card main structure:\r\n    </h2>\r\n    <p\r\n      id=\"ct\"\r\n      class=\"mb-10 border-2 border-red-900 rounded-lg text-center\"\r\n      contenteditable=\"true\"\r\n    ></p>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Account, Client, Storage, Databases } from \"appwrite\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      client: null,\r\n      databases: null,\r\n      ct: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.client = new Client();\r\n    this.client\r\n      .setEndpoint(\"https://appwrite.nief.tech/v1\")\r\n      .setProject(\"65254ba2c6d13ae30a67\");\r\n\r\n    this.databases = new Databases(this.client); // Create an instance of Databases\r\n\r\n    this.ct = this.$el.querySelector(\"#ct\");\r\n\r\n    this.getDocument();\r\n  },\r\n  methods: {\r\n    getDocument() {\r\n      const template = this.databases.getDocument(\r\n        \"6525a3104c1b6602d0ef\", //Database ID\r\n        \"6525a31a6d23271d8dff\", //Collection ID\r\n        \"653e9434c27921501737\" //Document ID\r\n      );\r\n\r\n      template.then(\r\n        (response) => {\r\n          console.log(response); // Success\r\n          this.ct.innerText = response.Card;\r\n        },\r\n        (error) => {\r\n          console.log(error); // Failure\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <div class=\"alert alert-error mt-24\">\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      class=\"stroke-current shrink-0 h-6 w-6\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n        stroke-width=\"2\"\r\n        d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n      />\r\n    </svg>\r\n    <span>DANGEZONE!!!!!</span>\r\n  </div>\r\n  <!--dangerzone start-->\r\n\r\n  <div class=\"center\">\r\n    <h1 class=\"text-center text-5xl font-black mt-20\">Gefahrenzone:</h1>\r\n  </div>\r\n  <input\r\n    type=\"text\"\r\n    placeholder=\"Document ID\"\r\n    class=\"input input-bordered input-accent w-full max-w-xs m-12\"\r\n    v-model=\"docid\"\r\n  />\r\n  <button class=\"btn btn-error\" @click=\"deleteDocument\">Delete</button>\r\n</template>\r\n<script>\r\nimport { Client, Databases } from \"appwrite\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      docid: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    deleteDocument() {\r\n      const client = new Client();\r\n      const databases = new Databases(client);\r\n\r\n      client\r\n        .setEndpoint(\"https://appwrite.nief.tech/v1\") // Your API Endpoint\r\n        .setProject(\"65254ba2c6d13ae30a67\"); // Your project ID\r\n\r\n      const promise = databases.deleteDocument(\r\n        \"6525a3104c1b6602d0ef\", //database ID\r\n        \"6525a31a6d23271d8dff\", //Collection ID\r\n        this.docid //Document ID\r\n      );\r\n\r\n      promise.then(\r\n        function (response) {\r\n          console.log(response); // Success\r\n        },\r\n        function (error) {\r\n          console.log(error); // Failure\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <h1 class=\"text-3xl font-bold text-center\">Image upload</h1>\r\n  <div>\r\n    <input\r\n      id=\"uploader\"\r\n      type=\"file\"\r\n      class=\"file-input file-input-bordered file-input-accent w-full max-w-xs\"\r\n    />\r\n    <input\r\n      id=\"id\"\r\n      type=\"text\"\r\n      placeholder=\"Document ID\"\r\n      class=\"input input-bordered input-accent w-full max-w-xs m-12\"\r\n      v-model=\"docid\"\r\n    />\r\n    <button @click=\"upload\">Upload</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Account, Client, Storage, ID, Databases } from \"appwrite\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      docid: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    upload() {\r\n      let id = this.docid;\r\n\r\n      const client = new Client();\r\n      client\r\n        .setEndpoint(\"https://appwrite.nief.tech/v1\")\r\n        .setProject(\"65254ba2c6d13ae30a67\");\r\n\r\n      const storage = new Storage(client);\r\n\r\n      const file = document.getElementById(\"uploader\").files[0];\r\n\r\n      const promise = storage.createFile(\"65402371e69a06bb7c03\", id, file);\r\n\r\n      promise.then(\r\n        function (response) {\r\n          console.log(response); // Success\r\n        },\r\n        function (error) {\r\n          console.log(error); // Failure\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <!-- Table to display the items -->\r\n  <div class=\"overflow-x-auto\">\r\n    <table class=\"table table-zebra\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>Name</th>\r\n          <th>ID</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <!-- Loop through each item and display its name and ID -->\r\n        <tr v-for=\"(item, index) in items\" :key=\"index\">\r\n          <th>{{ index + 1 }}</th>\r\n          <td>{{ item.name }}</td>\r\n          <td>{{ item.$id }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"divider\"></div>\r\n\r\n  <!-- Section to get the URL of an image -->\r\n  <h1 class=\"text-3xl font-bold text-center\">Get Image URL</h1>\r\n\r\n  <div class=\"center\">\r\n    <!-- Input for the user to enter the ID of the image they want the URL for -->\r\n    <input\r\n      type=\"text\"\r\n      id=\"id2\"\r\n      placeholder=\"id of wanted image URL\"\r\n      class=\"input input-bordered input-accent w-full max-w-xs m-12 rounded-3xl\"\r\n    />\r\n  </div>\r\n  <!-- Display the result (the URL) -->\r\n  <div class=\"center\">\r\n    <p class=\"text-3xl font-medium text-center\">{{ res }}</p>\r\n\r\n    <!-- Button to trigger the getUrl method -->\r\n    <button class=\"btn btn-primary justify-center rounded-full\" @click=\"getUrl\">\r\n      Get URL\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Account, Client, Storage, ID, Databases } from \"appwrite\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [], // Array to hold the items\r\n      res: \"\", // String to hold the result (the URL)\r\n    };\r\n  },\r\n  methods: {\r\n    getUrl() {\r\n      // Create a new Appwrite client\r\n      const client = new Client();\r\n      client\r\n        .setEndpoint(\"https://appwrite.nief.tech/v1\") // Set the endpoint\r\n        .setProject(\"65254ba2c6d13ae30a67\"); // Set the project ID\r\n\r\n      // Create a new Storage instance\r\n      const storage = new Storage(client);\r\n\r\n      // Get the view URL of the file with the given ID\r\n      const result = storage.getFileView(\r\n        \"65402371e69a06bb7c03\",\r\n        document.getElementById(\"id2\").value\r\n      );\r\n      // Set the result to the URL\r\n      this.res = result.href;\r\n      console.log(result);\r\n    },\r\n  },\r\n  created() {\r\n    // This code runs when the component is created\r\n    // It gets the list of files and updates the items data property\r\n    const client = new Client();\r\n    client\r\n      .setEndpoint(\"https://appwrite.nief.tech/v1\")\r\n      .setProject(\"65254ba2c6d13ae30a67\");\r\n\r\n    const storage = new Storage(client);\r\n\r\n    const promise = storage.listFiles(\"65402371e69a06bb7c03\");\r\n\r\n    promise.then(\r\n      (response) => {\r\n        this.items = response.files; // Update the items data property with the files\r\n      },\r\n      function (error) {\r\n        console.log(error); // Log any errors\r\n      }\r\n    );\r\n  },\r\n};\r\n</script>\r\n"],"names":["_sfc_main","_ssrRenderAttrs","_mergeProps","_ssrInterpolate"],"mappings":"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"}